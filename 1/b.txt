
square_sum：     文件格式 elf64-x86-64


Disassembly of section .init:

0000000000400428 <_init>:
  400428:	48 83 ec 08          	sub    $0x8,%rsp
  40042c:	48 8b 05 15 06 20 00 	mov    0x200615(%rip),%rax        # 600a48 <_DYNAMIC+0x1d0>
  400433:	48 85 c0             	test   %rax,%rax
  400436:	74 05                	je     40043d <_init+0x15>
  400438:	e8 63 00 00 00       	callq  4004a0 <exit@plt+0x10>
  40043d:	48 83 c4 08          	add    $0x8,%rsp
  400441:	c3                   	retq   

Disassembly of section .plt:

0000000000400450 <printf@plt-0x10>:
  400450:	ff 35 02 06 20 00    	pushq  0x200602(%rip)        # 600a58 <_GLOBAL_OFFSET_TABLE_+0x8>
  400456:	ff 25 04 06 20 00    	jmpq   *0x200604(%rip)        # 600a60 <_GLOBAL_OFFSET_TABLE_+0x10>
  40045c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400460 <printf@plt>:
  400460:	ff 25 02 06 20 00    	jmpq   *0x200602(%rip)        # 600a68 <_GLOBAL_OFFSET_TABLE_+0x18>
  400466:	68 00 00 00 00       	pushq  $0x0
  40046b:	e9 e0 ff ff ff       	jmpq   400450 <_init+0x28>

0000000000400470 <__libc_start_main@plt>:
  400470:	ff 25 fa 05 20 00    	jmpq   *0x2005fa(%rip)        # 600a70 <_GLOBAL_OFFSET_TABLE_+0x20>
  400476:	68 01 00 00 00       	pushq  $0x1
  40047b:	e9 d0 ff ff ff       	jmpq   400450 <_init+0x28>

0000000000400480 <__isoc99_scanf@plt>:
  400480:	ff 25 f2 05 20 00    	jmpq   *0x2005f2(%rip)        # 600a78 <_GLOBAL_OFFSET_TABLE_+0x28>
  400486:	68 02 00 00 00       	pushq  $0x2
  40048b:	e9 c0 ff ff ff       	jmpq   400450 <_init+0x28>

0000000000400490 <exit@plt>:
  400490:	ff 25 ea 05 20 00    	jmpq   *0x2005ea(%rip)        # 600a80 <_GLOBAL_OFFSET_TABLE_+0x30>
  400496:	68 03 00 00 00       	pushq  $0x3
  40049b:	e9 b0 ff ff ff       	jmpq   400450 <_init+0x28>

Disassembly of section .plt.got:

00000000004004a0 <.plt.got>:
  4004a0:	ff 25 a2 05 20 00    	jmpq   *0x2005a2(%rip)        # 600a48 <_DYNAMIC+0x1d0>
  4004a6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000004004b0 <_start>:
  4004b0:	31 ed                	xor    %ebp,%ebp
  4004b2:	49 89 d1             	mov    %rdx,%r9
  4004b5:	5e                   	pop    %rsi
  4004b6:	48 89 e2             	mov    %rsp,%rdx
  4004b9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4004bd:	50                   	push   %rax
  4004be:	54                   	push   %rsp
  4004bf:	49 c7 c0 b0 06 40 00 	mov    $0x4006b0,%r8
  4004c6:	48 c7 c1 40 06 40 00 	mov    $0x400640,%rcx
  4004cd:	48 c7 c7 a6 05 40 00 	mov    $0x4005a6,%rdi
  4004d4:	e8 97 ff ff ff       	callq  400470 <__libc_start_main@plt>
  4004d9:	f4                   	hlt    
  4004da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004004e0 <deregister_tm_clones>:
  4004e0:	b8 9f 0a 60 00       	mov    $0x600a9f,%eax
  4004e5:	55                   	push   %rbp
  4004e6:	48 2d 98 0a 60 00    	sub    $0x600a98,%rax
  4004ec:	48 83 f8 0e          	cmp    $0xe,%rax
  4004f0:	48 89 e5             	mov    %rsp,%rbp
  4004f3:	76 1b                	jbe    400510 <deregister_tm_clones+0x30>
  4004f5:	b8 00 00 00 00       	mov    $0x0,%eax
  4004fa:	48 85 c0             	test   %rax,%rax
  4004fd:	74 11                	je     400510 <deregister_tm_clones+0x30>
  4004ff:	5d                   	pop    %rbp
  400500:	bf 98 0a 60 00       	mov    $0x600a98,%edi
  400505:	ff e0                	jmpq   *%rax
  400507:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40050e:	00 00 
  400510:	5d                   	pop    %rbp
  400511:	c3                   	retq   
  400512:	0f 1f 40 00          	nopl   0x0(%rax)
  400516:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40051d:	00 00 00 

0000000000400520 <register_tm_clones>:
  400520:	be 98 0a 60 00       	mov    $0x600a98,%esi
  400525:	55                   	push   %rbp
  400526:	48 81 ee 98 0a 60 00 	sub    $0x600a98,%rsi
  40052d:	48 c1 fe 03          	sar    $0x3,%rsi
  400531:	48 89 e5             	mov    %rsp,%rbp
  400534:	48 89 f0             	mov    %rsi,%rax
  400537:	48 c1 e8 3f          	shr    $0x3f,%rax
  40053b:	48 01 c6             	add    %rax,%rsi
  40053e:	48 d1 fe             	sar    %rsi
  400541:	74 15                	je     400558 <register_tm_clones+0x38>
  400543:	b8 00 00 00 00       	mov    $0x0,%eax
  400548:	48 85 c0             	test   %rax,%rax
  40054b:	74 0b                	je     400558 <register_tm_clones+0x38>
  40054d:	5d                   	pop    %rbp
  40054e:	bf 98 0a 60 00       	mov    $0x600a98,%edi
  400553:	ff e0                	jmpq   *%rax
  400555:	0f 1f 00             	nopl   (%rax)
  400558:	5d                   	pop    %rbp
  400559:	c3                   	retq   
  40055a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400560 <__do_global_dtors_aux>:
  400560:	80 3d 31 05 20 00 00 	cmpb   $0x0,0x200531(%rip)        # 600a98 <__TMC_END__>
  400567:	75 11                	jne    40057a <__do_global_dtors_aux+0x1a>
  400569:	55                   	push   %rbp
  40056a:	48 89 e5             	mov    %rsp,%rbp
  40056d:	e8 6e ff ff ff       	callq  4004e0 <deregister_tm_clones>
  400572:	5d                   	pop    %rbp
  400573:	c6 05 1e 05 20 00 01 	movb   $0x1,0x20051e(%rip)        # 600a98 <__TMC_END__>
  40057a:	f3 c3                	repz retq 
  40057c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400580 <frame_dummy>:
  400580:	bf 70 08 60 00       	mov    $0x600870,%edi
  400585:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  400589:	75 05                	jne    400590 <frame_dummy+0x10>
  40058b:	eb 93                	jmp    400520 <register_tm_clones>
  40058d:	0f 1f 00             	nopl   (%rax)
  400590:	b8 00 00 00 00       	mov    $0x0,%eax
  400595:	48 85 c0             	test   %rax,%rax
  400598:	74 f1                	je     40058b <frame_dummy+0xb>
  40059a:	55                   	push   %rbp
  40059b:	48 89 e5             	mov    %rsp,%rbp
  40059e:	ff d0                	callq  *%rax
  4005a0:	5d                   	pop    %rbp
  4005a1:	e9 7a ff ff ff       	jmpq   400520 <register_tm_clones>

00000000004005a6 <main>:
  4005a6:	55                   	push   %rbp
  4005a7:	48 89 e5             	mov    %rsp,%rbp
  4005aa:	48 83 ec 10          	sub    $0x10,%rsp
  4005ae:	bf c8 06 40 00       	mov    $0x4006c8,%edi
  4005b3:	b8 00 00 00 00       	mov    $0x0,%eax
  4005b8:	e8 a3 fe ff ff       	callq  400460 <printf@plt>
  4005bd:	48 8d 55 f4          	lea    -0xc(%rbp),%rdx
  4005c1:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
  4005c5:	48 89 c6             	mov    %rax,%rsi
  4005c8:	bf f0 06 40 00       	mov    $0x4006f0,%edi
  4005cd:	b8 00 00 00 00       	mov    $0x0,%eax
  4005d2:	e8 a9 fe ff ff       	callq  400480 <__isoc99_scanf@plt>
  4005d7:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4005da:	85 c0                	test   %eax,%eax
  4005dc:	75 11                	jne    4005ef <main+0x49>
  4005de:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4005e1:	85 c0                	test   %eax,%eax
  4005e3:	75 0a                	jne    4005ef <main+0x49>
  4005e5:	bf 00 00 00 00       	mov    $0x0,%edi
  4005ea:	e8 a1 fe ff ff       	callq  400490 <exit@plt>
  4005ef:	8b 55 f4             	mov    -0xc(%rbp),%edx
  4005f2:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4005f5:	89 d6                	mov    %edx,%esi
  4005f7:	89 c7                	mov    %eax,%edi
  4005f9:	e8 19 00 00 00       	callq  400617 <calculate>
  4005fe:	89 45 fc             	mov    %eax,-0x4(%rbp)
  400601:	8b 45 fc             	mov    -0x4(%rbp),%eax
  400604:	89 c6                	mov    %eax,%esi
  400606:	bf f5 06 40 00       	mov    $0x4006f5,%edi
  40060b:	b8 00 00 00 00       	mov    $0x0,%eax
  400610:	e8 4b fe ff ff       	callq  400460 <printf@plt>
  400615:	eb 97                	jmp    4005ae <main+0x8>

0000000000400617 <calculate>:
  400617:	55                   	push   %rbp
  400618:	48 89 e5             	mov    %rsp,%rbp
  40061b:	89 7d ec             	mov    %edi,-0x14(%rbp)
  40061e:	89 75 e8             	mov    %esi,-0x18(%rbp)
  400621:	8b 45 ec             	mov    -0x14(%rbp),%eax
  400624:	0f af 45 ec          	imul   -0x14(%rbp),%eax
  400628:	89 c2                	mov    %eax,%edx
  40062a:	8b 45 e8             	mov    -0x18(%rbp),%eax
  40062d:	0f af 45 e8          	imul   -0x18(%rbp),%eax
  400631:	01 d0                	add    %edx,%eax
  400633:	89 45 fc             	mov    %eax,-0x4(%rbp)
  400636:	8b 45 fc             	mov    -0x4(%rbp),%eax
  400639:	5d                   	pop    %rbp
  40063a:	c3                   	retq   
  40063b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000400640 <__libc_csu_init>:
  400640:	41 57                	push   %r15
  400642:	41 56                	push   %r14
  400644:	41 89 ff             	mov    %edi,%r15d
  400647:	41 55                	push   %r13
  400649:	41 54                	push   %r12
  40064b:	4c 8d 25 0e 02 20 00 	lea    0x20020e(%rip),%r12        # 600860 <__frame_dummy_init_array_entry>
  400652:	55                   	push   %rbp
  400653:	48 8d 2d 0e 02 20 00 	lea    0x20020e(%rip),%rbp        # 600868 <__init_array_end>
  40065a:	53                   	push   %rbx
  40065b:	49 89 f6             	mov    %rsi,%r14
  40065e:	49 89 d5             	mov    %rdx,%r13
  400661:	4c 29 e5             	sub    %r12,%rbp
  400664:	48 83 ec 08          	sub    $0x8,%rsp
  400668:	48 c1 fd 03          	sar    $0x3,%rbp
  40066c:	e8 b7 fd ff ff       	callq  400428 <_init>
  400671:	48 85 ed             	test   %rbp,%rbp
  400674:	74 20                	je     400696 <__libc_csu_init+0x56>
  400676:	31 db                	xor    %ebx,%ebx
  400678:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40067f:	00 
  400680:	4c 89 ea             	mov    %r13,%rdx
  400683:	4c 89 f6             	mov    %r14,%rsi
  400686:	44 89 ff             	mov    %r15d,%edi
  400689:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40068d:	48 83 c3 01          	add    $0x1,%rbx
  400691:	48 39 eb             	cmp    %rbp,%rbx
  400694:	75 ea                	jne    400680 <__libc_csu_init+0x40>
  400696:	48 83 c4 08          	add    $0x8,%rsp
  40069a:	5b                   	pop    %rbx
  40069b:	5d                   	pop    %rbp
  40069c:	41 5c                	pop    %r12
  40069e:	41 5d                	pop    %r13
  4006a0:	41 5e                	pop    %r14
  4006a2:	41 5f                	pop    %r15
  4006a4:	c3                   	retq   
  4006a5:	90                   	nop
  4006a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4006ad:	00 00 00 

00000000004006b0 <__libc_csu_fini>:
  4006b0:	f3 c3                	repz retq 

Disassembly of section .fini:

00000000004006b4 <_fini>:
  4006b4:	48 83 ec 08          	sub    $0x8,%rsp
  4006b8:	48 83 c4 08          	add    $0x8,%rsp
  4006bc:	c3                   	retq   
